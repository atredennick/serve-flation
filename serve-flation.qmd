---
title: "Analysis of serve-flation"
author: "Andrew Tredennick"
format: html
---

## Libraries

```{r libraries}
library(tidyverse)
library(here)
library(arrow)
library(brms)
library(tidybayes)
library(ggridges)
library(showtext)
```

```{r settings}
showtext_auto()  # automatically use showtext for rendering
font_add_google("Oswald", "myfont")

theme_custom <- theme_minimal(base_size = 14) +
  theme(
    text = element_text(family = "myfont", color = "#333333"),
    plot.background = element_rect(fill = "#F7F7F7", color = NA),
    panel.background = element_rect(fill = "#F7F7F7", color = NA),
    legend.position = "top",  # Place the legend above the plot
    legend.direction = "horizontal",  # Arrange the legend items horizontally
    legend.justification = "left",  # Left-align the legend
    legend.box = "horizontal",  # Ensure the legend box is placed horizontally
    legend.box.just = "left",  # Left justify the legend box
    legend.background = element_blank(),  # Transparent background for the legend
    legend.box.background = element_blank()  # Optional: transparent box background
  )
theme_set(theme_custom)
```

# Data

## Function to pre-process serve data
This function takes the full serve dataset and subsets to a player of interest based on their surname (last name).
The player of interest is specifically identified as the server when the record is for their serve.
All other servers (every one of their opponents in the dataset) are collectively defined as "Opponents."

```{r data-fxn}
process_player_data <- function(data, surname, idname) {
  # filter data
  data <- data |>
    filter(
      (str_detect(player1, surname) | str_detect(player2, surname)) &
      Speed_KMH > 0 & !is.na(Speed_KMH)
    ) |>
    mutate(
      PointServer = case_when(
        PointServer == 1 ~ player1,
        PointServer == 2 ~ player2,
        TRUE ~ NA_character_
      )
    )
  
  # transform and select relevant columns
  data <- data |>
    mutate(
      server = case_when(
        str_detect(PointServer, surname) ~ idname,
        TRUE ~ "Opponents"
      )
    ) |>
    filter(year > 2020, slam %in% c("usopen", "wimbledon")) |>
    dplyr::select(
      match_id, slam, year,
      server, speed_kmh = Speed_KMH
    )
  
  # format columns for analysis
  data <- data |>
    mutate(
      year = factor(year),
      server = factor(server, levels = c(idname, "Opponents"))
    )
  
  return(data)
}

```

## Load data and process
```{r data}
serve_data <- read_parquet(here("data", "serve_data.parquet"))
iga_data <- process_player_data(serve_data, "Swiatek", "Iga")
```



### Filter data to WTA (Women's Tennis Association) Tour
```{r wta}
# from On Cloud (ON) color pallette: https://www.on.com
color_map <- c(Iga = "#FC63CE", Opponents = "#27414F")
facet_map <- c(usopen = "US Open", wimbledon = "Wimbledon")
eda <- ggplot(iga_data,
       aes(
         x = factor(year),
         y = speed_kmh,
         fill = server,
         color = server
       )) +
  geom_dotplot(
    binaxis = 'y',
    binwidth = 2,
    dotsize = 0.5,
    stackdir = 'center',
    position = position_dodge(0.5),
    alpha = 0.3
  ) +
  geom_boxplot(position = position_dodge(0.5),
               alpha = 0.2,
               width = 0.3,
               outlier.shape = NA) +
  facet_wrap( ~ slam, ncol = 1, labeller = as_labeller(facet_map)) +
  scale_color_manual(values = color_map, name = NULL) +
  scale_fill_manual(values = color_map, name = NULL) +
  labs(x = "Year", y = "First serve speed (km/h)")
ggsave(here("figures", "speed-data.pdf"), plot = eda, height = 5, width = 6)
```


```{r fit}
fit <- brm(speed_kmh ~ server*year + slam, data = iga_data, family = weibull())
newdata <- tibble(server = unique(iga_data$server)) |>
  crossing(tibble(year = unique(iga_data$year))) |>
  crossing(tibble(slam = unique(iga_data$slam)))
preds <- add_epred_draws(newdata, object = fit)
```

## Is Iga's serve getting faster?
```{r}
colors <- c("#D1D1D1", "#B8A89D", "#8E7F6C", "#707070") 
preds |>
  ungroup () |>
  dplyr::select(server, year, .epred, .draw) |>
  group_by(server, year, .draw) |>
  summarise(speed = mean(.epred), .groups = "drop") |>
  ungroup() |>
  filter(server == "Iga") |>
  pivot_wider(names_from = year, values_from = speed) |>
  pivot_longer(cols = `2022`:`2024`) |>
  mutate(delta = value - `2021`) |>
  ggplot(aes(x = delta, y = name, fill = name)) +
  geom_vline(aes(xintercept = 0), linetype = 2) +
  geom_density_ridges(alpha = 0.75, color = NA, bandwidth = 0.5) +
  scale_fill_manual(values = colors[2:4]) +
  coord_cartesian(xlim = c(-5, 10)) +
  labs(
    x = "Iga's first serve speed increase/decrease relative to 2021 (km/h)",
    y = NULL,
    caption = "\n\nPosterior distributions averaged over\nUS Open and Wimbledon serve speeds."
  ) +
  guides(fill = "none") 
```

## Are Iga's opponent's serves getting faster?
```{r}
preds |>
  ungroup () |>
  dplyr::select(server, year, .epred, .draw) |>
  group_by(server, year, .draw) |>
  summarise(speed = mean(.epred), .groups = "drop") |>
  ungroup() |>
  filter(server == "Opponents") |>
  pivot_wider(names_from = year, values_from = speed) |>
  pivot_longer(cols = `2022`:`2024`) |>
  mutate(delta = value - `2021`) |>
  ggplot(aes(x = delta, y = name, fill = name)) +
  geom_vline(aes(xintercept = 0), linetype = 2) +
  geom_density_ridges(alpha = 0.75, color = NA, bandwidth = 0.5) +
  scale_fill_manual(values = colors[2:4]) +
  coord_cartesian(xlim = c(-5, 10)) +
  labs(
    x = "Opponents's first serve speed increase/decrease relative to 2021 (km/h)",
    y = NULL,
    caption = "\n\nPosterior distributions averaged over\nUS Open and Wimbledon serve speeds."
  ) +
  guides(fill = "none")
```


## Is Iga keeping up with serve-flation?
```{r}
deltas <- preds |>
  ungroup () |>
  dplyr::select(server, year, .epred, .draw) |>
  group_by(server, year, .draw) |>
  summarise(speed = mean(.epred), .groups = "drop") |>
  ungroup() |>
  pivot_wider(names_from = server, values_from = speed) |>
  mutate(delta = Iga - Opponents)

delta_plot <- ggplot(deltas, aes(x = delta, y = year, fill = year, group = year)) +
  geom_vline(aes(xintercept = 0), linetype = 2) +
  geom_density_ridges(alpha = 0.75, color = NA, bandwidth = 0.5) +
  scale_fill_manual(values = colors) +
  labs(
    x = "Iga's speed advantage (km/h)",
    y = NULL,
    caption = "\n\nPosterior distributions averaged over\nUS Open and Wimbledon serve speeds."
  ) +
  guides(fill = "none") 
ggsave(here("figures", "deltas.pdf"), plot = delta_plot, width = 6, height = 4)
```
